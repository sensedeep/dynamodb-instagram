service: dynamodb-instagram

plugins:
  - serverless-esbuild
  - serverless-dynamodb-local
  - serverless-offline

custom:
  esbuild:
    bundle: true
    minify: false
    sourcemap: true
    
  dynamodb:
    start:
      inMemory: true
      migrate: true
    stages:
      - dev

provider:
  name: aws
  runtime: nodejs12.x
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:BatchGetItem"
        - "dynamodb:ConditionCheckItem"
        - "dynamodb:GetItem"
        - "dynamodb:PutItem"
        - "dynamodb:Query"
        - "dynamodb:UpdateItem"
      Resource:
        - Fn::GetAtt:
          - InstagramTable
          - Arn
        - Fn::Join:
          - "/"
          - - Fn::GetAtt:
              - InstagramTable
              - Arn
            - "index/GSI1"
  environment:
    TABLE_NAME: { Ref: InstagramTable }
    # TABLE_NAME: Instagram

functions:
  createUser:
    handler: src/handlers/createUser.main
    events:
      - http:
          path: /users
          method: post
  getUser:
    handler: src/handlers/getUser.main
    events:
      - http:
          path: /users/{username}
          method: get
  createPhoto:
    handler: src/handlers/createPhoto.main
    events:
      - http:
          path: /users/{username}/photos
          method: post
  getPhoto:
    handler: src/handlers/getPhoto.main
    events:
      - http:
          path: /users/{username}/photos/{photoId}
          method: get
  likePhoto:
    handler: src/handlers/likePhoto.main
    events:
      - http:
          path: /users/{username}/photos/{photoId}/likes
          method: post
  listLikesForPhoto:
    handler: src/handlers/listLikesForPhoto.main
    events:
      - http:
          path: /users/{username}/photos/{photoId}/likes
          method: get
  commentOnPhoto:
    handler: src/handlers/commentOnPhoto.main
    events:
      - http:
          path: /users/{username}/photos/{photoId}/comments
          method: post
  listCommentsForPhoto:
    handler: src/handlers/listCommentsForPhoto.main
    events:
      - http:
          path: /users/{username}/photos/{photoId}/comments
          method: get
  followUser:
    handler: src/handlers/followUser.main
    events:
      - http:
          path: /users/{username}/followers
          method: post
  listFollowersOfUser:
    handler: src/handlers/listFollowersOfUser.main
    events:
      - http:
          path: /users/{username}/followers
          method: get
  listFollowedByUser:
    handler: src/handlers/listFollowedByUser.main
    events:
      - http:
          path: /users/{username}/following
          method: get

resources:
  Resources:
    InstagramTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: Instagram
        AttributeDefinitions:
          - AttributeName: "pk"
            AttributeType: "S"
          - AttributeName: "sk"
            AttributeType: "S"
          - AttributeName: "gs1pk"
            AttributeType: "S"
          - AttributeName: "gs1sk"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "pk"
            KeyType: "HASH"
          - AttributeName: "sk"
            KeyType: "RANGE"
        BillingMode: "PAY_PER_REQUEST"
        GlobalSecondaryIndexes:
          - IndexName: 'gs1'
            KeySchema:
            - AttributeName: "gs1pk"
              KeyType: "HASH"
            - AttributeName: "gs1sk"
              KeyType: "RANGE"
            Projection:
              ProjectionType: ALL
